@page "/signup"
@using BlazorApp.Data
@inject SqliteService db 
@inject NavigationManager NavigationManager 

@if (true) // username is already in use
{
    <label for="fname">Account:</label>
    <input type="text" @bind="@account" @bind:event="oninput" id="account" name="account"><p>@exists</p><br><br>
    <label for="lname">Password:</label>
    <input type="password" @bind="@password" @bind:event="oninput" id="password" name="password"><p>@warning</p><br><br>
    <button @onclick="signup">Sign Up</button>
    <input type=button onClick="location.href='/login'" value='Cancel'>  // redirect to login page
}
else
{
    <label for="fname">Account:</label>
    <input type="text" @bind="@account" @bind:event="oninput" id="account" name="account"><br><br>
    <label for="lname">Password:</label>
    <input type="password" @bind="@password" @bind:event="oninput" id="password" name="password"><br><br>
    <button class="btn btn-primary" @onclick="signup">Sign Up</button>
}

@code 
{
    private string? account { get; set; }
    private string? password { get; set; }

    string? exists { get; set; }
    string? warning { get; set; }
    async Task signup()
    {
        bool memberInDB = await db.CheckUsernameInDB(account);
        if (memberInDB == true) { exists = "Username already exists!"; }
        else 
        {
            if(this.password != null && this.password.Length >= 6)
            {
                db.createNewMember(account, password);
                NavigationManager.NavigateTo("/login");
            }
            else { warning = "Password must be at least 6 characters."; }
        }
    }
}